{"version":3,"sources":["component/Item/Item.jsx","component/Process/Process.jsx","component/Select/Select.jsx","component/InputForm/InputForm.jsx","component/SummaryItem/SummaryItem.jsx","component/Summary/Summary.jsx","component/ShippingMethod/ShippingMethod.jsx","component/InputBase/InputBase.jsx","component/validation.js","helper/checkErrorBeforeSave.js","component/Login/Login.jsx","component/Signup/Signup.jsx","component/SignupLogin/SignupLogin.jsx","component/Confirm/Confirm.jsx","component/InputForm/constants.js","component/PaymentInfo/PaymentInfo.jsx","component/Shipping/Shipping.jsx","component/Cart/Cart.jsx","services.js","constant.js","component/Popup/Popup.jsx","component/HomepageItem/HomepageItem.jsx","component/SearchResult/SearchResult.jsx","component/SearchInput/SearchInput.jsx","component/StatusElement/StatusElement.jsx","component/HomepageCartStatus/HomepageCartStatus.jsx","component/Homepage/Homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","props","handleItemDelete","itemDisplay","state","setState","pushElementToArr","index","handleSelect","e","quantity","Number","target","value","totalPrice","itemInfo","price","toFixed","this","img","categories","name","className","src","alt","inventory","id","onChange","icon","faTimes","onClick","React","Component","Process","status","Select","selectTitle","onBlur","errorM","option","map","InputForm","format","title","item","SummaryItem","product","Summary","cardNumDisplay","cardNum","cardNumLength","length","digit","join","discount","itemData","userData","cardData","shippingMethod","handlePageFinished","summaryData","payNum","nameSurname","zipCode","yourAddress","addressTitle","city","country","cellphone","toUpperCase","cardHolderName","cardNumber","expireMonth","expireYear","ShippingMethod","type","selectedOption","info","checked","InputBase","faEye","passWordToggler","emailValidation","email","search","passwordValidation","password","onlyStringValidation","content","onlyNumValidation","num","checkNullValidation","checkErrorBeforeSave","error","errorValue","Object","keys","forEach","val","errorKey","INIT_USER_LOGIN","Login","togglePasswordVisibility","isPasswordShown","handleInputData","prevState","handleValidation","errorText","emailError","passwordError","handleBlur","handleSubmit","loginData","label","onSubmit","placeHolder","autoComplete","INIT_USER_CREATEACCOUNT","confirmPassword","firstName","surName","postcode","Signup","prevPassword","confirmPasswordError","firstNameError","surNameError","postcodeError","createAccountData","SignupLogin","handleOptionChange","switchToNextPage","toNextPage","Confirm","handleBtnBack","toPrevPage","isPageFinished","OTHERCARDS","INIT_CARD","ccv","PaymentInfo","numberSeq","start","end","Array","fill","element","mask","split","match","RegExp","regexPattern","MASTERCARD","VISA","AMERICANEXPRESS","DISCOVER","card","replace","test","trim","cardNumberValidation","isError","maxLength","inputData","SHIPPING","telephone","Shipping","homepageData","Cart","setInitialPriceArr","priceArr","push","sumPriceArr","arr","reduce","prev","current","quantityArr","selectedItemIndex","selectedItem","selectedPriceArr","selectedQuantityArr","data","filter","includes","i","tempObject","Service","limit","a","Promise","success","failure","url","URL","params","key","searchParams","append","headers","process","fetch","method","res","json","description","available","raw","Popup","removeHTMLtag","str","popupClose","addToCart","HomepageItem","popup","popupClick","SearchResult","input","displayItemArr","SearchInput","placeholder","StatusElement","HomepageCartStatus","Homepage","loading","popupItemIndex","cartItem","handlePopupClick","currentTarget","dataset","fetchCommerceAPI","then","console","log","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d83d6f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Item.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Item extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            quantity:null,\r\n            totalPrice:null,\r\n            itemDisplay:true,\r\n        }\r\n    }\r\n\r\n    handleItemDelete = () =>{\r\n        let itemDisplay = this.state.itemDisplay\r\n        this.setState({\r\n            itemDisplay:!itemDisplay\r\n        },() => {this.props.pushElementToArr(0,this.props.index)} )\r\n    }\r\n\r\n    handleSelect = e =>{\r\n        this.setState({ \r\n            quantity: Number(e.target.value),\r\n            totalPrice: (Number(e.target.value) * this.props.itemInfo.price).toFixed(2)\r\n        }, () => {this.props.pushElementToArr(this.state.totalPrice,this.state.quantity,this.props.index)});\r\n    }\r\n\r\n    render(){\r\n        const {itemInfo} = this.props\r\n        const img = `/img/${itemInfo.categories}/${itemInfo.name}.jpg`\r\n        \r\n        return(\r\n            this.state.itemDisplay && \r\n            (<div className='CartItemWrapper'>\r\n                <div className=\"product\">\r\n                    <div className=\"imgWrapper\">\r\n                        <img src={img} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h6>{itemInfo.name}</h6>\r\n                        <div> <span className='boldTitle'>CATEGORIES </span><br /> {itemInfo.categories}</div>\r\n                        <div> <span className='boldTitle'>INVENTORY  </span><br /> {itemInfo.inventory}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"price\">{itemInfo.price}</div>\r\n                <div className=\"quantity\">\r\n                    <select name=\"quantity\" id=\"\" onChange={this.handleSelect}>\r\n                        <option ></option>\r\n                        <option value='1'>1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"totalPrice\">{this.state.totalPrice}</div>\r\n                <FontAwesomeIcon icon={faTimes} className='timesIcon' onClick={this.handleItemDelete}\r\n                 />\r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport './Process.css'\r\n\r\nclass Process extends React.Component{\r\n    render(){\r\n        switch (this.props.status) {\r\n            case 1:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Confirmation</div>\r\n                    </div>\r\n                )\r\n                \r\n            case 2:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"lineGray\"></div>\r\n                        <div className='circleGray'>Confirmation</div>\r\n                    </div>\r\n                )\r\n            case 3:\r\n                return(\r\n                    <div className='flowChart'>\r\n                        {/* status-1*/}\r\n                        <div className='circle'>Cart</div>\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Delivery</div>\r\n                        {/* status-2*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Payment</div>\r\n                        {/* status-3*/}\r\n                        <div className=\"line\"></div>\r\n                        <div className='circle'>Confirmation</div>\r\n                    </div>\r\n                )\r\n            default:\r\n                break;\r\n        }  \r\n    }\r\n}\r\n\r\nexport default Process","import React from 'react'\r\nimport './Select.css'\r\n\r\nclass Select extends React.Component{\r\n    render(){\r\n        const {selectTitle, onChange, onBlur, errorM, option} = this.props\r\n        return(\r\n            <div className='row'>\r\n              <span className='inlineSpan'>{selectTitle}</span>\r\n              <select name={selectTitle} onChange = {onChange} onBlur = {onBlur}>\r\n                <option key={'null'}></option>\r\n                {option.map(option => {\r\n                    return(<option key={option} value={option} >{option}</option>)\r\n                })}\r\n              </select>  \r\n              {errorM && <div className='errorSelect'>{errorM}</div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select","import React from 'react'\r\nimport Select from '../Select/Select'\r\nimport './InputForm.css'\r\n\r\nclass InputForm extends React.Component{\r\n    render(){\r\n        if(this.props.format === 'base'){\r\n           return(\r\n            <div className='row'>\r\n                <span>{this.props.title}</span>\r\n                <div className='relativeForError'>\r\n                    <input {...this.props}/> \r\n                    {this.props.errorM && <div className='error'>{this.props.errorM}</div>}\r\n                </div>\r\n            </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                (this.props.title.map((item,index) =>\r\n                <Select \r\n                key={this.props.title[index].selectTitle}\r\n                selectTitle={item.selectTitle} \r\n                option={item.option}\r\n                onBlur = {this.props.onBlur}\r\n                onChange = {this.props.onChange}\r\n                errorM = {this.props.errorM}\r\n                />)\r\n                )\r\n            )\r\n        } \r\n    }\r\n}\r\n\r\nexport default InputForm\r\n","import React from 'react'\r\nimport './SummaryItem.css'\r\n\r\nclass SummaryItem extends React.Component{\r\n    render(){\r\n        const {product, index} = this.props\r\n        const img = `/img/${product.item.categories}/${product.item.name}.jpg`\r\n        return(\r\n            <div className='summaryItem' key={'item-' + index}>\r\n                <div className='imgWrapper'>\r\n                    <img src={img} alt=\"product\" />\r\n                    {/* <img src={product.item.imgUrl} alt=\"product\" /> */}\r\n                </div>\r\n                <div className=\"itemInfo\">\r\n                    <h6>{product.name}</h6>\r\n                    {/* <div> <span className='boldTitle'>COLOR :</span>{product.item.color}</div>\r\n                    <div> <span className='boldTitle'>SIZE : </span>{product.item.size}</div> */}\r\n                    <div> <span className='boldTitle'>QUANTITY <br /> </span>{product.quantity}</div>\r\n                    <div> <span className='boldTitle'>PRICE <br /> </span>{product.price}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SummaryItem","import React from 'react'\r\nimport SummaryItem from '../SummaryItem/SummaryItem';\r\nimport './Summary.css'\r\n\r\nclass Summary extends React.Component{\r\n\r\n   cardNumDisplay = (cardNum) => {\r\n    let display, cardNumLength = cardNum.length\r\n\r\n    display = [...cardNum]\r\n    .map( (digit, index) => {\r\n        if(digit !== ' ' && index <  cardNumLength - 4 ){\r\n        digit = '*';\r\n        }\r\n        return digit;\r\n    }).join(''); \r\n\r\n    return display;     \r\n}\r\n\r\n    render(){\r\n        const {totalPrice, discount, itemData, userData, cardData, status,  \r\n            shippingMethod, handlePageFinished} = this.props\r\n        const summaryData = [\r\n            {status:0, title:'Car Subtotal', price:totalPrice},\r\n            {status:0, title:'Discount', price:discount},\r\n            {status:0, title:'Cart Total', price:totalPrice - discount},\r\n        ]\r\n        const payNum = 'PAY $ ' + (totalPrice - discount) ;\r\n        return(\r\n            <div className=\"summary\">\r\n                    <h5>SUMMARY</h5>\r\n                    {/* price*/}\r\n                    {summaryData\r\n                        .map(item => {\r\n                            return(\r\n                                    <div key={item.title} className='summaryPrice'>\r\n                                        <div className='subtitle'>{item.title}</div>\r\n                                        <div className='price'>${item.price}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    } \r\n                    {/* item*/}\r\n                    {status >= 1 && itemData &&\r\n                        <div className='summaryItemWrapper'>\r\n                            {itemData.map( (product, index) => \r\n                                <SummaryItem product = {product} index = {index}/>)\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {/* user information*/}\r\n                    { status >= 2 && userData &&  \r\n                        <div className='itemInfo'> \r\n                            <div className='subtitle'>Shipping Information</div>\r\n                            <span className='boldTitle'>NAME : </span>{userData.nameSurname}\r\n                            <br />\r\n                            <span className='boldTitle'>ADDRESS : </span>\r\n                                <br />\r\n                                {userData.zipCode}\r\n                                <br />\r\n                                {userData.yourAddress} \r\n                                {userData.addressTitle} \r\n                                <br />\r\n                                {userData.city} \r\n                                {userData.state} \r\n                                {userData.country}\r\n                            <br />\r\n                            <span className='boldTitle'>CELLPHONE : </span>\r\n                                {userData.cellphone}\r\n                            <br />\r\n                        </div>\r\n                    }  \r\n                    {/* shipping method*/}      \r\n                    {shippingMethod &&\r\n                        <div className=\"itemInfo\">\r\n                            <div className='subtitle'>Shipping Method</div>\r\n                            {shippingMethod.toUpperCase()}\r\n                        </div>\r\n                    }\r\n                    {/* card information*/}\r\n                    {cardData &&\r\n                        <div className='itemInfo'>\r\n                            <div className=\"subtitle\">Card Information</div>\r\n                            <span className='boldTitle'>CARDHOLDER NAME : </span>\r\n                            {this.props.cardData.cardHolderName}\r\n                            <br />\r\n                            <span className='boldTitle'>CARD NUMBER : </span>\r\n                            <br />\r\n                            {this.cardNumDisplay(this.props.cardData.cardNumber)}\r\n                            <br />\r\n                            <span className='boldTitle'>EXPIRE DATE : </span>\r\n                            {this.props.cardData.expireMonth} \r\n                            {'/'}\r\n                            {this.props.cardData.expireYear}\r\n                            <br />\r\n                        </div>\r\n                    }\r\n                    {/* submit button*/}\r\n                    {status === 2 ? \r\n                    <button className='checkoutBtn' value='pay' onClick={handlePageFinished}>\r\n                        {payNum}\r\n                    </button>\r\n                    : \r\n                    <button className='checkoutBtn' value='checkout' onClick={handlePageFinished}>\r\n                        CHECKOUT\r\n                    </button>\r\n                    }        \r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Summary","import React from 'react'\r\nimport './ShippingMethod.css'\r\n\r\nclass ShippingMethod extends React.Component{\r\n    render(){\r\n        const {type, value, onClick, selectedOption, info} = this.props\r\n        return(\r\n            <div>\r\n                <input \r\n                type={type} \r\n                value={value} \r\n                className='radioOption' \r\n                onClick={onClick}\r\n                checked={selectedOption === value}\r\n                />\r\n                <span className='radioText'>{info}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShippingMethod\r\n","import React from 'react'\r\nimport './InputBase.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass InputBase extends React.Component{\r\n    render(){\r\n        return(\r\n            <label>\r\n            <input className='input-root' {...this.props} onClick={this.props.onClick}/>\r\n            { (this.props.name === 'password' || this.props.name === 'confirmPassword') &&\r\n                <FontAwesomeIcon \r\n                icon={faEye} \r\n                className='eyeIcon' \r\n                onClick = {this.props.passWordToggler} />\r\n            }\r\n            {this.props.errorM && <div className='errorInputBase'>{this.props.errorM}</div>}\r\n            </label>\r\n        )\r\n    }\r\n} \r\n\r\nexport default InputBase","export const emailValidation = email => {\r\n    const emailRegex = /^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/;\r\n    if (email.search(emailRegex) === -1) {\r\n        return 'Enter the valid email address'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const passwordValidation = (password) => {\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,20}$/;\r\n    if (password.search(passwordRegex) === -1) {\r\n        return 'Please enter the valid password'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const samePassword = (prevPassword, currentPassword) => {\r\n    if (prevPassword !== currentPassword) {\r\n        return 'Please enter the same password'\r\n    } else if (!prevPassword) {\r\n        return 'Please enter the password before confirm'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const onlyStringValidation = content => {\r\n    const contentRegex = /^[A-Z]+$/i\r\n    if (content.search(contentRegex) === -1) {\r\n        return 'Enter the valid name'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const postcodeValidation = postcode => {\r\n    const USpostcodeRegex = /^[0-9]{5}(?:-[0-9]{4})?$/\r\n    if (postcode.search(USpostcodeRegex) === -1) {\r\n        return 'Enter the valid postcode'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const onlyNumValidation = num => {\r\n    const numRegex = /^[0-9]+$/;\r\n    if (num.search(numRegex) === -1) {\r\n        return 'Enter number only'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const checkNullValidation = content => {\r\n    if (!content.length) {\r\n        return 'Required'\r\n    } else {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const cardNumberValidation = (cardNumber) => {\r\n    const regexPattern = {\r\n        MASTERCARD: /^5[1-5][0-9]{1,}|^2[2-7][0-9]{1,}$/,\r\n        VISA: /^4[0-9]{2,}$/,\r\n        AMERICANEXPRESS: /^3[47][0-9]{5,}$/,\r\n        DISCOVER: /^6(?:011|5[0-9]{2})[0-9]{3,}$/\r\n    }\r\n    for (const card in regexPattern) {\r\n        if (cardNumber.replace(/[^\\d]/g, '').match(regexPattern[card])) {\r\n            if (cardNumber) {\r\n                return cardNumber && /^[1-6]{1}[0-9]{14,15}$/i.test(cardNumber.replace(/[^\\d]/g, '').trim())\r\n                    ? ''\r\n                    : 'Enter the valid card number'\r\n            }\r\n        }\r\n    }\r\n    return 'Enter the valid card number'\r\n}\r\n\r\n\r\n\r\n","export const checkErrorBeforeSave = (state) => {\r\n    const { userData, error } = state\r\n    let errorValue = {}\r\n\r\n    Object.keys(userData).forEach(val => {\r\n        let errorKey = val + 'Error'\r\n        if (!userData[val].length || error[errorKey]) {\r\n            if (!userData[val].length) {\r\n                errorValue = { ...errorValue, [`${val}Error`]: 'Required' }\r\n            } else {\r\n                errorValue = { ...errorValue, [`${val}Error`]: error[`${val}Error`] }\r\n            }\r\n        }\r\n    })\r\n\r\n    return errorValue\r\n}","import React from 'react'\r\nimport InputBase from '../InputBase/InputBase'\r\nimport './Login.css'\r\nimport { emailValidation, passwordValidation} from '../validation'\r\nimport { checkErrorBeforeSave } from '../../helper/checkErrorBeforeSave'\r\n\r\nconst INIT_USER_LOGIN = {\r\n    email:'',\r\n    password:'',\r\n}\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n         userData:INIT_USER_LOGIN,\r\n         isPasswordShown:false,\r\n         error : {},\r\n        }\r\n    }\r\n\r\n    togglePasswordVisibility = () =>{\r\n        this.setState({\r\n            isPasswordShown: !this.state.isPasswordShown,\r\n        })\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        switch (type) {\r\n            case 'email':\r\n                errorText = emailValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        emailError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'password':\r\n                errorText = passwordValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        passwordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    handleSubmit = (e) => {\r\n        const errorValue = checkErrorBeforeSave(this.state)\r\n\r\n        if(Object.keys(errorValue).length === 0){\r\n            this.setState({\r\n                userData:INIT_USER_LOGIN,\r\n            }, this.props.handleSubmit)\r\n        } else{\r\n            this.setState({ 'error': errorValue })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const loginData = [\r\n            {label:'E-Mail', name:'email', type:'email', error:'emailError'},\r\n            {label:'password', name:'password', type:'password', error:'passwordError'},\r\n        ]\r\n        \r\n        return(\r\n            <>\r\n            <form onSubmit={this.handleSubmit}>\r\n                {loginData.map(item => (\r\n                    <InputBase \r\n                        placeHolder={item.label}\r\n                        type = {(item.type === 'password' || item.type === 'confirmPassword') ?\r\n                        (this.state.isPasswordShown ?  'text' : 'password') : item.type\r\n                        }\r\n                        value = {loginData && loginData[item.name]}\r\n                        onChange = {this.handleInputData}\r\n                        onBlur = {this.handleBlur}\r\n                        autoComplete = 'off'\r\n                        name = {item.name}\r\n                        passWordToggler = {this.togglePasswordVisibility}\r\n                        errorM = {\r\n                            (this.state.error \r\n                            && this.state.error[item.error]\r\n                            && this.state.error[item.error].length > 1)\r\n                            ? this.state.error[item.error]\r\n                            : null\r\n                        }\r\n                    />\r\n                    ))\r\n                }\r\n                {/* submit button*/}\r\n                <InputBase name='login' type='submit' value='Login'></InputBase>\r\n                <div className='btn-wrapper fbSignIn'>\r\n                    <InputBase type=\"submit\" value='Sign up with FACEBOOK' />\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport './Signup.css'\r\nimport InputBase from '../InputBase/InputBase'\r\nimport { emailValidation, passwordValidation, onlyStringValidation, samePassword, postcodeValidation} from '../validation'\r\nimport { checkErrorBeforeSave } from '../../helper/checkErrorBeforeSave'\r\n\r\nconst INIT_USER_CREATEACCOUNT = {\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    firstName:'',\r\n    surName:'',\r\n    postcode:'',\r\n}\r\n\r\nclass Signup extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            isPasswordShown: false,\r\n            userData:INIT_USER_CREATEACCOUNT,\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    togglePasswordVisibility = () =>{\r\n        this.setState({\r\n            isPasswordShown: !this.state.isPasswordShown,\r\n        })\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        switch (type) {\r\n            case 'email':\r\n                errorText = emailValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        emailError:errorText,\r\n                    }\r\n                }))\r\n                \r\n                break;\r\n            case 'password':\r\n                errorText = passwordValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        passwordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'confirmPassword':\r\n                errorText = samePassword(this.state.userData.password,value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        confirmPasswordError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'firstName':\r\n                errorText = onlyStringValidation(value)\r\n                // setState error\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        firstNameError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'surName':\r\n                errorText = onlyStringValidation(value)\r\n                // setState error\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        surNameError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'postcode':\r\n                errorText = postcodeValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        postcodeError:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    handleSubmit = (e) => {\r\n        const errorValue = checkErrorBeforeSave(this.state)\r\n\r\n        if(Object.keys(errorValue).length === 0){\r\n            this.setState({\r\n                userData:INIT_USER_CREATEACCOUNT,\r\n            }, this.props.handleSubmit)\r\n        } else{\r\n            this.setState({ 'error': errorValue })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const createAccountData = [\r\n                {label:'E-Mail', name:'email', type:'email', error:'emailError'},\r\n                {label:'password', name:'password', type:'password', error:'passwordError'},\r\n                {label:'confirm password', name:'confirmPassword', type:'password', error:'confirmPasswordError'},\r\n                {label:'first name', name:'firstName', type:'text', error:'firstNameError'},\r\n                {label:'surname', name:'surName', type:'text', error:'surNameError'},\r\n                {label:'postcode', name:'postcode', type:'text', error:'postcodeError'},\r\n            ]\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                {createAccountData.map(item => (\r\n                    <InputBase \r\n                        placeHolder={item.label}\r\n                        type = {(item.type === 'password' || item.type === 'confirmPassword') ?\r\n                        (this.state.isPasswordShown ?  'text' : 'password') : item.type\r\n                        }\r\n                        value = {createAccountData && createAccountData[item.name]}\r\n                        onChange = {this.handleInputData}\r\n                        onBlur = {this.handleBlur}\r\n                        autoComplete = 'off'\r\n                        name = {item.name}\r\n                        passWordToggler = {this.togglePasswordVisibility}\r\n                        errorM = {\r\n                            (this.state.error \r\n                            && this.state.error[item.error]\r\n                            && this.state.error[item.error].length > 1)\r\n                            ? this.state.error[item.error]\r\n                            : null\r\n                        }\r\n                    />\r\n                    ))\r\n                }\r\n                {/* submit button*/}\r\n                <InputBase name='submit' type='submit' value='Submit'></InputBase>\r\n                <div className='btn-wrapper fbSignIn'>\r\n                    <InputBase type=\"submit\" value='Sign up with FACEBOOK' />\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\nimport './SignupLogin.css'\r\nimport Login from '../Login/Login'\r\nimport Signup from '../Signup/Signup'\r\nimport Homepage from '../Homepage/Homepage'\r\n\r\nclass SignupLogin extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            selectedOption:'login',\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    handleOptionChange = e => {\r\n        this.setState({\r\n            selectedOption: e.target.value,\r\n        })   \r\n    };\r\n\r\n    switchToNextPage = () => {\r\n        let toNextPage = this.state.toNextPage;\r\n        this.setState({\r\n            toNextPage: !toNextPage\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let toNextPage = this.state.toNextPage;\r\n        this.setState({\r\n            toNextPage: !toNextPage\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {selectedOption, toNextPage} = this.state\r\n\r\n        return(\r\n            (toNextPage ? \r\n            <Homepage />:\r\n            <div className='wrapper'>\r\n                 \r\n                    <div className='formSelection' >\r\n                        <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"login\"\r\n                            value=\"login\"\r\n                            checked={selectedOption === \"login\"}\r\n                            onChange={this.handleOptionChange}\r\n                        />\r\n                            Login\r\n                        </label>\r\n                       <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"createAccount\"\r\n                            value=\"createAccount\"\r\n                            checked={selectedOption === \"createAccount\"}\r\n                            onChange={this.handleOptionChange}\r\n                        />\r\n                            Create Account\r\n                        </label>\r\n                    </div>\r\n                    {/* display login or sign up content*/}\r\n                    {selectedOption === 'login' ? \r\n                        <Login handleSubmit = {this.handleSubmit}/> : \r\n                        <Signup handleSubmit = {this.handleSubmit}/>\r\n                    }\r\n                \r\n            </div>\r\n             )\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupLogin","import React from 'react'\r\nimport './Confirm.css'\r\nimport PaymentInfo from '../PaymentInfo/PaymentInfo'\r\nimport Process from '../Process/Process'\r\nimport Summary from '../Summary/Summary'\r\nimport SignupLogin from '../SignupLogin/SignupLogin'\r\n\r\nclass Confirm extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            status:3,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let {toNextPage} = this.state;\r\n       \r\n       this.setState({\r\n            toNextPage:!toNextPage\r\n       })\r\n      \r\n    }\r\n\r\n    render(){\r\n        const {toPrevPage, toNextPage, status} = this.state;\r\n        const {itemData, userData, cardData, totalPrice, shippingMethod, discount} = this.props\r\n        if(toPrevPage){\r\n            return(<PaymentInfo\r\n                    itemData = {itemData} \r\n                    userData = {userData}\r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n            />\r\n            )\r\n        } else if(toNextPage){\r\n            return(<SignupLogin/>)\r\n        } else {\r\n            return(\r\n            <div className=\"container\">\r\n                    {/* left block*/}\r\n                    <div className=\"confirmation\">\r\n                        {/* process flow chart*/}\r\n                        <Process status = {this.state.status} key='process'/>\r\n                        <h2 className='shippingInfoTitle'>Confirmation</h2>\r\n                        {/* confirm information*/}\r\n                        <div className='confirmationInfo'>\r\n                            <div className=\"confirmationTitle\">\r\n                                Congratulation !!\r\n                                <br />\r\n                                Your Order Is Accepted\r\n                            </div>\r\n                            <div className=\"confirmationContent\">\r\n                                Lorem ipsum dolor sit amet consectetur, adipisicing elit. \r\n                                <br />\r\n                                Atque qui facilis, vel totam omnis deserunt maiores est \r\n                                <br />\r\n                                voluptas voluptate blanditiis fuga sit mollitia necessitatibus\r\n                                <br /> \r\n                                culpa sapiente, quaerat velit dolores error.\r\n                            </div>\r\n                        </div>\r\n                        <button className='backBtn' onClick={this.handleBtnBack}>Back To PaymentInfo</button>\r\n                    </div>\r\n                    {/* right block*/}\r\n                    <Summary\r\n                    key='summary'\r\n                    status = {status}\r\n                    isPageFinished = {this.state.isPageFinished}\r\n                    handlePageFinished={this.handlePageFinished}\r\n                    itemData = {itemData} \r\n                    userData = {userData}\r\n                    cardData = {cardData}\r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    shippingMethod = {shippingMethod}\r\n                    />\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Confirm\r\n","\r\nexport const OTHERCARDS = [\r\n    /[1-9]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n]\r\n\r\nexport const AMERICANEXPRESS = [\r\n    /[1-9]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    ' ',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n]\r\n\r\n","import React from 'react'\r\nimport './PaymentInfo.css'\r\nimport Shipping from '../Shipping/Shipping'\r\nimport Summary from '../Summary/Summary'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Process from '../Process/Process'\r\nimport Confirm from '../Confirm/Confirm'\r\nimport { OTHERCARDS } from '../InputForm/constants'\r\nimport {onlyNumValidation, cardNumberValidation, onlyStringValidation, checkNullValidation} from '../validation'\r\n\r\nconst INIT_CARD = {\r\n    cardNumber:'',\r\n    cardHolderName:'',\r\n    expireMonth:'',\r\n    expireYear:'',\r\n    ccv:'',\r\n}\r\n\r\nclass PaymentInfo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            status:2,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n            isPageFinished:false,\r\n            cardData:INIT_CARD,\r\n            maxLength:OTHERCARDS.length,\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    numberSeq = (start,end) => {\r\n    let seqArr = [];\r\n    let num = end - start + 1;\r\n    seqArr = \r\n        Array(num)\r\n        .fill()\r\n        .map((element, index) => index + start)\r\n    return seqArr\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        if(name === 'cardNumber'){\r\n            let mask = value.split(' ').join('')\r\n            if(mask.length){\r\n                mask = mask.match(new RegExp('.{1,4}', 'g')).join(' ')\r\n                 this.setState( prevState => ({\r\n                 cardData : {...prevState.cardData, [name] : mask}\r\n             }))\r\n            } else{\r\n                this.setState( prevState => ({\r\n                cardData : {...prevState.cardData, [name] : value}\r\n            }))\r\n            }\r\n        } else{\r\n            this.setState( prevState => ({\r\n            cardData : {...prevState.cardData, [name] : value}\r\n        }))\r\n        }\r\n    }\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        let name = type + 'Error'\r\n        switch (type) {\r\n            case 'cardNumber':\r\n                errorText = cardNumberValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'cardHolderName':\r\n                errorText = onlyStringValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n        \r\n            case 'ccv':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            \r\n            case 'expireMonth':\r\n            case 'expireYear':\r\n                errorText = checkNullValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    checkErrorBeforeSave = () => {\r\n        const {cardData, error} = this.state\r\n        let errorValue = {}\r\n        let isError = false\r\n        Object.keys(cardData).forEach( val => {\r\n            let errorKey = val + 'Error'\r\n            if(!cardData[val].length || error[errorKey]){ \r\n               if(!cardData[val].length){\r\n                    errorValue = {...errorValue,[`${val}Error`]:'Required'}    \r\n                } else{\r\n                    errorValue = {...errorValue,[`${val}Error`]:error[`${val}Error`]}  \r\n               }\r\n              isError = true\r\n            }\r\n        })\r\n        \r\n        this.setState({'error':errorValue}) \r\n        return isError\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let isError = this.checkErrorBeforeSave();\r\n       let {isPageFinished,toNextPage} = this.state;\r\n       if(!isError){\r\n            this.setState({\r\n                isPageFinished:!isPageFinished,\r\n                toNextPage:!toNextPage\r\n            })\r\n       }\r\n    }\r\n\r\n    render(){\r\n        const {maxLength} = this.state\r\n        const {itemData, totalPrice, discount, userData, shippingMethod} = this.props\r\n        const inputData = [\r\n            {format:'base', title:'CardHolder Name', type:'text', name:'cardHolderName',error:'cardHolderNameError'},\r\n            {format:'base', title:'Card Number', type:'text', name:'cardNumber',error:'cardNumberError'},\r\n            {format:'select',\r\n             title:[{name:'expireMonth',selectTitle:'expireMonth',option:this.numberSeq(1, 12)}, \r\n                    {name:'expireYear',selectTitle:'expireYear',option:this.numberSeq(2010,2030)},  \r\n                    ],  \r\n             type: 'select',\r\n             name:'select',\r\n             error:['expireMonthError', 'expireYearError']},\r\n            {format:'base', title:'CCV', type:'text', name:'ccv',error:'ccvError'},\r\n        ]\r\n        if(this.state.toPrevPage){\r\n            return (<Shipping\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    />)\r\n        } else if(this.state.toNextPage){\r\n            return (<Confirm\r\n                    cardData = {this.state.cardData}\r\n                    userData = {userData}\r\n                    shippingMethod = {shippingMethod}\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n            />\r\n            )\r\n        } else{\r\n            return(\r\n                <div className=\"container\">\r\n                    {/* left block*/}\r\n                    <div className=\"paymentForm\">\r\n                        {/* process flow chart*/}\r\n                        <Process status = {this.state.status} key='process'/>\r\n                        <h2 className='shippingInfoTitle'>Payment Information</h2>\r\n                            {/* form input*/}\r\n                            {inputData.map(item => \r\n                                <InputForm\r\n                                value = {this.state.cardData && this.state.cardData[item.name]}\r\n                                maxLength = {maxLength}\r\n                                key={item.name}\r\n                                format={item.format} \r\n                                title={item.title}\r\n                                type={item.type}\r\n                                name={item.name}\r\n                                onChange = {this.handleInputData}\r\n                                onBlur = {this.handleBlur}\r\n                                autoComplete = 'off'\r\n                                errorM = {\r\n                                (this.state.error \r\n                                && this.state.error[item.error]\r\n                                && this.state.error[item.error].length > 1)\r\n                                ? this.state.error[item.error]\r\n                                : null\r\n                                }\r\n                                />    \r\n                            )}\r\n                            <button className='backBtn' onClick={this.handleBtnBack}>Back To Shipping</button>\r\n                    </div>\r\n                    {/* right block*/}\r\n                    <Summary\r\n                    key='summary'\r\n                    status = {this.state.status}\r\n                    isPageFinished = {this.state.isPageFinished}\r\n                    handlePageFinished={this.handlePageFinished}\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    userData = {userData}\r\n                    shippingMethod = {shippingMethod}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default PaymentInfo","import React from 'react'\r\nimport './Shipping.css'\r\nimport Cart from '../Cart/Cart'\r\nimport Process from '../Process/Process'\r\nimport InputForm from '../InputForm/InputForm'\r\nimport Summary from '../Summary/Summary'\r\nimport ShippingMethod from '../ShippingMethod/ShippingMethod'\r\nimport PaymentInfo from '../PaymentInfo/PaymentInfo'\r\nimport {onlyNumValidation, onlyStringValidation, checkNullValidation} from '../validation'\r\n\r\nconst SHIPPING = {\r\n    addressTitle:'',\r\n    nameSurname:'',\r\n    yourAddress:'',\r\n    zipCode:'',\r\n    cellphone:'',\r\n    telephone:'',\r\n    country:'',\r\n    city:'',\r\n    state:''\r\n}\r\n\r\nclass Shipping extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n        this.state = {\r\n            status:1,\r\n            userData:SHIPPING,\r\n            toPrevPage:false,\r\n            toNextPage:false,\r\n            isPageFinished:false,\r\n            selectedOption:'standard',\r\n            error:{},\r\n        }\r\n    }\r\n\r\n    handleInputData = ({target:{name,value}}) =>{\r\n        this.setState( prevState => ({\r\n            userData : {...prevState.userData, [name] : value}\r\n        }))\r\n    }\r\n\r\n    handleOptionChange = e => {\r\n        let selectedOption = e.target.value\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n        });\r\n    };\r\n\r\n    handleBtnBack = () => {\r\n        const toPrevPage = this.state.toPrevPage\r\n        this.setState({\r\n            toPrevPage : !toPrevPage\r\n        })\r\n    }\r\n\r\n    handleValidation = (type, value) =>{\r\n        let errorText\r\n        let name = type + 'Error'\r\n        switch (type) {\r\n            case 'nameSurname':\r\n            case 'yourAddress':\r\n            case 'addressTitle':\r\n                errorText = onlyStringValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            case 'cellphone':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n        \r\n            case 'telephone':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            \r\n            case 'zipCode':\r\n                errorText = onlyNumValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;    \r\n            case 'country':\r\n            case 'city':\r\n            case 'state':\r\n                errorText = checkNullValidation(value)\r\n                this.setState( prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        [name]:errorText,\r\n                    }\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleBlur = ({target:{name,value}}) => this.handleValidation(name,value)\r\n\r\n    checkErrorBeforeSave = () => {\r\n        const {userData, error} = this.state\r\n        let errorValue = {}\r\n        let isError = false\r\n        Object.keys(userData).forEach( val => {\r\n            let errorKey = val + 'Error'\r\n            if(!userData[val].length || error[errorKey]){ \r\n               if(!userData[val].length){\r\n                    errorValue = {...errorValue,[`${val}Error`]:'Required'}    \r\n                } else{\r\n                    errorValue = {...errorValue,[`${val}Error`]:error[`${val}Error`]}  \r\n               }\r\n              isError = true\r\n            }\r\n        })\r\n        \r\n        this.setState({'error':errorValue}) \r\n        return isError\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n       let isError = this.checkErrorBeforeSave();\r\n       let {isPageFinished,toNextPage} = this.state;\r\n       if(!isError){\r\n            this.setState({\r\n                isPageFinished:!isPageFinished,\r\n                toNextPage:!toNextPage\r\n            })\r\n       }\r\n    }\r\n\r\n    render(){\r\n        const inputData = [\r\n            {format:'base', title:'Address Title', type:'text', name:'addressTitle',error:'addressTitleError'},\r\n            {format:'base', title:'Name-Surname', type:'text', name:'nameSurname',error:'nameSurnameError'},\r\n            {format:'base', title:'Your Address', type:'text', name:'yourAddress',error:'yourAddressError'},\r\n            {format:'base', title:'Zip Code', type:'text', name:'zipCode',error:'zipCodeError'},\r\n            {format:'select',\r\n             title:[{name:'country',selectTitle:'country',option:['us', 'uk']}, \r\n                    {name:'city',selectTitle:'city',option:['new york', 'london']},  \r\n                    {name:'state',selectTitle:'state',option:['new york', 'london']}],  \r\n             type: 'select',\r\n             name:'select',\r\n             error:['countryError', 'cityError', 'stateError']},\r\n            {format:'base', title:'Cellphone', type:'text', name:'cellphone',error:'cellphoneError'},\r\n            {format:'base', title:'Telephone', type:'text', name:'telephone',error:'telephoneError'},\r\n        ]\r\n        const shippingMethodOption = [\r\n            {type:'radio', value:'standard', info:'Standard Delivery in 4-6 business Days - Free '},\r\n            {type:'radio', value:'express', info:'Express - Delivery in 2-3 business Days - $ 5.00'},\r\n        ]\r\n        const {homepageData, itemData, totalPrice, discount} = this.props\r\n\r\n            if(this.state.toPrevPage){\r\n                return(<Cart itemData = {homepageData}/>)\r\n            } else if(this.state.toNextPage){\r\n                return(<PaymentInfo\r\n                        userData = {this.state.userData}\r\n                        shippingMethod = {this.state.selectedOption}\r\n                        itemData = {itemData} \r\n                        totalPrice = {totalPrice}\r\n                        discount = {discount}\r\n                        />)\r\n            } else{\r\n                return(\r\n                <div className=\"container\">\r\n                    {/* left block*/}\r\n                    <div className=\"shippingForm\">\r\n                        {/* process flow chart*/}\r\n                        <Process status = {this.state.status} key='process'/>\r\n                        <h2 className='shippingInfoTitle'>Shipping Information</h2>\r\n                            {/* form input*/}\r\n                            {inputData.map(item => \r\n                                <InputForm\r\n                                key={item.name}\r\n                                format={item.format} \r\n                                title={item.title}\r\n                                type={item.type}\r\n                                name={item.name}\r\n                                onChange = {this.handleInputData}\r\n                                onBlur = {this.handleBlur}\r\n                                autoComplete = 'off'\r\n                                errorM = {\r\n                                (this.state.error \r\n                                && this.state.error[item.error]\r\n                                && this.state.error[item.error].length > 1)\r\n                                ? this.state.error[item.error]\r\n                                : null\r\n                                }\r\n                                />    \r\n                            )}\r\n                            {/* shipping method*/}\r\n                            <h2 className='shippingMethod'>Shipping Method</h2>\r\n                            {shippingMethodOption.map(item => \r\n                                <ShippingMethod\r\n                                key={item.value}\r\n                                type={item.type}\r\n                                value={item.value}\r\n                                info={item.info}\r\n                                onClick={this.handleOptionChange}\r\n                                selectedOption={this.state.selectedOption}\r\n                                />\r\n                            )}\r\n                            <button className='backBtn' onClick={this.handleBtnBack}>Back To Cart</button>\r\n                    </div>\r\n                    {/* right block*/}\r\n                    <Summary\r\n                    key='summary'\r\n                    itemData = {itemData} \r\n                    totalPrice = {totalPrice}\r\n                    discount = {discount}\r\n                    userData = {this.state.userData}\r\n                    shippingMethod = {this.state.shippingMethod}\r\n                    status = {this.state.status}\r\n                    isPageFinished = {this.state.isPageFinished}\r\n                    handlePageFinished={this.handlePageFinished}\r\n                    />\r\n                </div> \r\n                )\r\n            }\r\n        }\r\n}\r\n\r\nexport default Shipping","import React from 'react'\r\nimport Item from '../Item/Item'\r\nimport Shipping from '../Shipping/Shipping'\r\nimport Summary from '../Summary/Summary'\r\nimport './Cart.css'\r\n\r\nclass Cart extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            priceArr: [],\r\n            quantityArr:[],\r\n            totalPrice:0,\r\n            discount:0,\r\n            status:0,\r\n            isPageFinished:false,\r\n            toNextPage:false,\r\n        }\r\n    }\r\n\r\n    setInitialPriceArr = (itemData) =>{\r\n        const priceArr = []\r\n        itemData.map(item => priceArr.push(item.price))\r\n        this.setState({\r\n            priceArr: priceArr\r\n        })\r\n    }\r\n\r\n    sumPriceArr = (arr) =>{\r\n        this.setState({\r\n            totalPrice : arr.reduce( (prev, current) => (Number(prev) + Number(current)).toFixed(2),0 )\r\n        })\r\n        \r\n    }\r\n\r\n    pushElementToArr = (val,quantity,index) =>{\r\n        this.setState(prevState => {\r\n            const { priceArr } = prevState;\r\n            const {quantityArr} = prevState;\r\n            priceArr[index] = val;\r\n            quantityArr[index] = quantity;\r\n            return {priceArr,quantityArr}\r\n            \r\n        },() => {this.sumPriceArr(this.state.priceArr)})\r\n    }\r\n\r\n    handlePageFinished = () => {\r\n        /* organized data*/\r\n        let selectedItemIndex, selectedItem, selectedPriceArr, selectedQuantityArr;\r\n        let data = [] \r\n        const {priceArr, quantityArr} = this.state\r\n\r\n        selectedItemIndex = (priceArr).map((item,index) => item === null? null : index)\r\n                        .filter(item => item !== null)\r\n        \r\n        selectedItem = (this.props.itemData).map((item,index) => selectedItemIndex.includes(index) ? item : null)\r\n                    .filter(item => item!==null)\r\n        \r\n        selectedPriceArr = priceArr.filter(item => item !== null )\r\n        \r\n        selectedQuantityArr = quantityArr.filter(item => item !== null )\r\n\r\n        for (let i = 0; i < selectedQuantityArr.length; i++) {\r\n            let tempObject = {item:null, price:null, quantity:null}\r\n            tempObject.item = selectedItem[i]\r\n            tempObject.price = selectedPriceArr[i]\r\n            tempObject.quantity = selectedQuantityArr[i]\r\n            data.push(tempObject)\r\n        }\r\n\r\n        if(this.state.totalPrice !== 0){\r\n            this.setState({\r\n                isPageFinished: true,\r\n                toNextPage:true,\r\n                data:data,\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){    \r\n        const {totalPrice, discount, status, isPageFinished,\r\n            toNextPage, quantityArr, data} = this.state\r\n        const {itemData} = this.props\r\n        return(\r\n            (toNextPage ? \r\n            <Shipping \r\n            homepageData = {itemData}\r\n            itemData = {data} \r\n            totalPrice = {totalPrice}\r\n            discount = {discount}\r\n            />:\r\n            <div className='container'>\r\n                <div className='cart'>\r\n                    <div className=\"colName\">\r\n                        <div>Product</div>\r\n                        <div>Price</div>\r\n                        <div>Quantity</div>\r\n                        <div>Total Price</div>\r\n                    </div>\r\n                    {itemData.map( (item,index) => (\r\n                        <Item \r\n                        itemInfo = {item}\r\n                        index = {index}\r\n                        pushElementToArr = {this.pushElementToArr}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <Summary\r\n                itemData={null}\r\n                totalPrice = {totalPrice}\r\n                discount ={discount}\r\n                quantityArr = {quantityArr}\r\n                status = {status}\r\n                isPageFinished = {isPageFinished}\r\n                handlePageFinished={this.handlePageFinished}\r\n                />\r\n            </div>\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart","import { SHOPPER_URL, SHOPPER_API } from './constant'\r\n\r\nclass Service {\r\n\r\n    async fetchCommerceAPI(limit) {\r\n        return new Promise(async (success, failure) => {\r\n            try {\r\n                const url = new URL(SHOPPER_URL)\r\n                let params = {\r\n                    \"limit\": limit,\r\n                };\r\n                Object.keys(params)\r\n                    .forEach(key => url.searchParams.append(key, params[key]));\r\n                let headers = {\r\n                    \"X-Authorization\": SHOPPER_API,\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                };\r\n\r\n                const res = await fetch(url, {\r\n                    method: \"GET\",\r\n                    headers: headers,\r\n                })\r\n                if (res) {\r\n                    const json = await res.json()\r\n                    const data = json.data.map(item => ({\r\n                        name: item.name,\r\n                        categories: item.categories[0].name,\r\n                        description: item.description,\r\n                        inventory: item.inventory.available,\r\n                        price: item.price.raw\r\n                    }))\r\n                    success(data)\r\n                } else {\r\n                    failure({ error: 'Invalid http request' })\r\n                }\r\n            } catch (error) {\r\n                failure(error)\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default Service","export const SHOPPER_URL = 'https://api.chec.io/v1/products'\r\nexport const SHOPPER_API = process.env.REACT_APP_API\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './Popup.css'\r\n\r\nclass Popup extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    removeHTMLtag = str => str.replace( /(<([^>]+)>)/ig, '')\r\n\r\n    render() {\r\n        const {data, popupClose, addToCart, index} = this.props\r\n        const img = `/img/${data.categories}/${data.name}.jpg`\r\n\r\n        //remove the HTML tag in description\r\n        data.description = this.removeHTMLtag(data.description)\r\n        \r\n        return (\r\n            <div className='popup'>\r\n                <FontAwesomeIcon icon={faTimes} className='timesIcon' onClick={popupClose} />\r\n\r\n                <div className=\"leftSection\">\r\n                    <img src={img} alt=\"product\" />\r\n                </div>\r\n\r\n                <div className=\"rightSection\">\r\n                    <div className=\"name\">\r\n                        <span className='value'>{data.name}</span>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <span className='title'>Price</span>\r\n                        <span className='value'>{data.price}</span>\r\n                    </div>\r\n                    <div className=\"inventory\">\r\n                        <span className='title'>Inventory</span>\r\n                        <span className='value'>{data.inventory}</span>\r\n                    </div>\r\n                    <div className=\"categories\">\r\n                        <span className='title'>Categories</span>\r\n                        <span className='value'>{data.categories}</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <span className='title'>Description</span>\r\n                        <p className='value'>{data.description}</p>\r\n                    </div>\r\n                    <div className=\"addToCartBtn\" onClick={addToCart} data-index = {index}>Add To Cart</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react';\r\nimport './HomepageItem.css'\r\nimport Popup from '../Popup/Popup';\r\n\r\nclass HomepageItem extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            popup:false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {itemInfo, index} = this.props\r\n        const img = `/img/${itemInfo.categories}/${itemInfo.name}.jpg`\r\n\r\n        return (\r\n            <div className='card' data-index={index} onClick={this.props.popupClick}>\r\n                <div className=\"imgWrapper\">\r\n                    <img src={img} alt=\"product\" />\r\n                </div>\r\n                <div className='name'>\r\n                    <span className='subTitle'>Name : </span>\r\n                    <span>{itemInfo.name}</span>\r\n                </div>\r\n                <div className='categories'>\r\n                    <span className='subTitle'>Categories : </span>\r\n                    <span>{itemInfo.categories}</span>\r\n                </div>\r\n                <div className='inventory'>\r\n                    <span className='subTitle'>Inventory : </span>\r\n                    <span>{itemInfo.inventory}</span>\r\n                </div>\r\n                <div className='price'>\r\n                    <span className='subTitle'>Price : </span>\r\n                    <span>{itemInfo.price}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomepageItem;","import React, { Component } from 'react';\r\nimport './SearchResult.css'\r\nimport Item from '../Item/Item';\r\nimport HomepageItem from '../HomepageItem/HomepageItem';\r\n\r\nclass SearchResult extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    search = (input, data) => {\r\n        let  displayItemArr = data.filter(element => element.name.includes(input) || \r\n                            element.categories.includes(input))\r\n        if(input === null){\r\n            displayItemArr = data\r\n        }\r\n        return displayItemArr\r\n    }\r\n\r\n    render() {\r\n        const {input, data} = this.props\r\n        const displayItemArr = this.search(input, data)\r\n\r\n        return (\r\n            <>\r\n            <div className=\"colName\">Product</div>\r\n            <div className='searchResultContainer'>\r\n                {displayItemArr.map( (item, index) => (\r\n                    // <Item  // 1. create a new component 'homepageitem', \r\n                    //        // while click on this item can show the detail info and add to the summary\r\n                    //        // 2. hompageitem component should display like a card (like project in pokemonAPI)\r\n                    // itemInfo = {item}\r\n                    // index = {index}\r\n                    // key={item.name}\r\n                    // pushElementToArr = {this.pushElementToArr}\r\n                    // />\r\n                    <HomepageItem \r\n                    itemInfo = {item}\r\n                    index = {index}\r\n                    key={item.name}\r\n                    popupClick = {this.props.popupClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResult;","import React from 'react'\r\nimport './SearchInput.css'\r\nimport SearchResult from '../SearchResult/SearchResult'\r\n\r\nclass SearchInput extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            inputData:null,\r\n        }\r\n    }\r\n\r\n    handleInputData = ({target:{value}}) =>{\r\n        this.setState( () => ({inputData : value}))\r\n    }\r\n\r\n    render(){    \r\n        return(\r\n            <>\r\n            <div className='inputWrapper'>\r\n                <input type=\"text\" \r\n                className='searchInput' \r\n                onChange = {this.handleInputData}\r\n                placeholder='Search for the product or categories'/>\r\n            </div>\r\n            <SearchResult \r\n            input = {this.state.inputData} \r\n            data = {this.props.data} \r\n            popupClick = {this.props.popupClick}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput","import React, { Component } from 'react';\r\nimport './StatusElement.css'\r\n\r\nclass StatusElement extends Component {\r\n    render() {\r\n        const {item} = this.props\r\n        const img = `/img/${item.categories}/${item.name}.jpg`\r\n        return (\r\n            <div key={item.name} className='itemWrapper'>\r\n                    <div className=\"StatusleftSection\">\r\n                        <img src={img} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"StatusrightSection\">\r\n                        <div className=\"name\">\r\n                            <span className='value'>{item.name}</span>\r\n                        </div>\r\n                        <div className=\"price\">\r\n                            <span className='title'>Price</span>\r\n                            <span className='value'>{item.price}</span>\r\n                        </div>\r\n                        <div className=\"inventory\">\r\n                            <span className='title'>Inventory</span>\r\n                            <span className='value'>{item.inventory}</span>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusElement;","import React, { Component } from 'react';\r\nimport './HomepageCartStatus.css'\r\nimport StatusElement from '../StatusElement/StatusElement';\r\n\r\nclass HomepageCartStatus extends Component {\r\n    render() {\r\n        const {data, handlePageFinished} = this.props\r\n        \r\n        return (\r\n            <div className='cartStatus'>\r\n                <h3>YOUR CART : {data.length} </h3>\r\n                {data.map(item => (\r\n                    <StatusElement item = {item}/>\r\n                ))}\r\n                <div className='goToCart' onClick={handlePageFinished}>GO TO CART</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomepageCartStatus;","import React, { Component } from 'react';\r\nimport './Homepage.css'\r\nimport Cart from '../Cart/Cart'\r\nimport Service from '../../services'\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport Popup from '../Popup/Popup';\r\nimport HomepageCartStatus from '../HomepageCartStatus/HomepageCartStatus';\r\n\r\nclass Homepage extends Component {\r\n    state ={\r\n        data:[],\r\n        loading:false, \r\n        error:false,   \r\n        isPageFinished:false,\r\n        popup:false,\r\n        popupItemIndex:null,\r\n        cartItem:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading:true})\r\n        const service = new Service()\r\n        service.fetchCommerceAPI(25)\r\n                .then( res => {\r\n                if(res){\r\n                    this.setState({\r\n                        data: res,\r\n                        loading:false,\r\n                    })\r\n                } else{\r\n                    this.setState({\r\n                        loading:false,\r\n                    })\r\n                }\r\n            }, error => {\r\n                console.log(error)\r\n                this.setState({\r\n                    loading:false,\r\n                    error:true\r\n                })\r\n            })\r\n    }\r\n\r\n    pushElementToArr = (val,quantity,index) =>{\r\n        this.setState(prevState => {\r\n            const { priceArr } = prevState;\r\n            const {quantityArr} = prevState;\r\n            priceArr[index] = val;\r\n            quantityArr[index] = quantity;\r\n            return {priceArr,quantityArr}\r\n            \r\n        },() => {this.sumPriceArr(this.state.priceArr)})\r\n    }\r\n\r\n    handlePopupClick = (e) =>{\r\n        let popup = this.state.popup\r\n        let index = e.currentTarget.dataset.index\r\n        this.setState({\r\n            popup: !popup,\r\n            popupItemIndex: index,\r\n        })\r\n    }\r\n\r\n    popupClose = () =>{\r\n        let popup = this.state.popup\r\n        this.setState({\r\n            popup: !popup,\r\n        })\r\n    }\r\n\r\n    addToCart = (e) =>{\r\n        const index = e.currentTarget.dataset.index\r\n        const {cartItem, data} = this.state\r\n        let isRepeat = cartItem.includes(data[index])\r\n        if(!isRepeat){\r\n            this.setState({\r\n            cartItem: [...cartItem, data[index]],\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageFinished = () => { \r\n        const {cartItem, isPageFinished} = this.state \r\n        if(cartItem.length >= 1){\r\n            this.setState({isPageFinished: !isPageFinished})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {data, loading, isPageFinished, \r\n            popup, popupItemIndex, cartItem} = this.state\r\n\r\n        if(loading){\r\n            return(<div class=\"loader\"></div>)\r\n        } else if(popup){\r\n            return(<Popup \r\n                data = {data[popupItemIndex]} \r\n                index = {popupItemIndex}\r\n                popupClose = {this.popupClose}\r\n                addToCart = {this.addToCart}\r\n                /> )\r\n        } else if (isPageFinished){\r\n            return(<Cart itemData = {cartItem}/>)\r\n        } else{\r\n            return(\r\n            <div className='homepageContainer'>\r\n                {/* left section in homepage*/}\r\n                <div className='result'>\r\n                    <SearchInput data = {data} popupClick = {this.handlePopupClick}/>\r\n                </div>\r\n                {/* left section in homepage*/}\r\n                <HomepageCartStatus data = {cartItem} handlePageFinished = {this.handlePageFinished}/>\r\n            </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Homepage;","import './App.css';\n//import SignupLogin from './component/SignupLogin/SignupLogin';\nimport Homepage from './component/Homepage/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Homepage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}